- name: Clone the template
  community.vmware.vmware_guest:
    hostname: "{{ vmwaredata.vcenter_server }}"
    username: "{{ vmwaredata.vcenter_user }}"
    password: "{{ vmwaredata.vcenter_pass }}"
    validate_certs: False
    name: "{{ server_stack }}-{{ item.name }}"
    template: "{{ vmwaredata.vcenter_vm_template }}"
    datacenter: "{{ vmwaredata.datacenter_name }}"
    folder: "/{{ vmwaredata.datacenter_name }}/vm"
    esxi_hostname: "{{ vmwaredata.esxi_hostname }}"
    datastore: "{{ vmwaredata.datastore_name }}"
    use_instance_uuid: true
    disk:
    - size_gb: "20"
      type: "thin"
      datastore: "{{ vmwaredata.datastore_name }}"

    hardware:
      num_cpus: 2
      memory_mb: 4096
    networks:
      - name: '{{ vmwaredata.network_name }}'
        connected: true
        start_connected: true
    state: poweredon
#    wait_for_ip_address: yes
    annotation: "{{ item.role }}"
#    customization:
#      hostname: '{{ item.name }}'
#    wait_for_customization: false
  loop: "{{ vmlist }}"
  delegate_to: localhost

- name: set network adapters
  community.vmware.vmware_guest_network:
    hostname: "{{ vmwaredata.vcenter_server }}"
    username: "{{ vmwaredata.vcenter_user }}"
    password: "{{ vmwaredata.vcenter_pass }}"
    validate_certs: False
    name: "{{ server_stack }}-{{ item.name }}"
    datacenter: "{{ vmwaredata.datacenter_name }}"
    folder: "/{{ vmwaredata.datacenter_name }}/vm"
    force: true
    gather_network_info: true
    esxi_hostname: "{{ vmwaredata.esxi_hostname }}"
    networks:
      - name: '{{ vmwaredata.network_name }}'
        connected: true
        start_connected: true
        device_type: vmxnet3
        state: present
        dvswitch_name: "{{ vmwaredata.dvswitch_name }}"
  loop: "{{ vmlist }}"
  delegate_to: localhost

- name: Create tag category
  community.vmware.vmware_category:
    hostname: '{{ vmwaredata.vcenter_server }}'
    username: '{{ vmwaredata.vcenter_user }}'
    password: '{{ vmwaredata.vcenter_pass }}'
    category_name: 'k3s'
    category_description: 'K3S Roles'
    validate_certs: no
    associable_object_types:
    - All objects
    state: present
  delegate_to: localhost

- name: Gather info about tag categories
  community.vmware.vmware_category_info:
    hostname: '{{ vmwaredata.vcenter_server }}'
    username: '{{ vmwaredata.vcenter_user }}'
    password: '{{ vmwaredata.vcenter_pass }}'
    validate_certs: no
  delegate_to: localhost
  register: all_tag_category_info
- debug: var=all_tag_category_info
- set_fact:
    var_category_id: "{{ all_tag_category_info | json_query('tag_category_info | [?category_name == `k3s`].category_id') | first }}"
  delegate_to: localhost

- name: Create stack tag
  community.vmware.vmware_tag:
    hostname: "{{ vmwaredata.vcenter_server }}"
    username: "{{ vmwaredata.vcenter_user }}"
    password: "{{ vmwaredata.vcenter_pass }}"
    validate_certs: no
    tag_name: "{{ item }}"
    category_id: "{{ var_category_id }}"
    state: present
  loop:
    - master_clusterinit
    - master_member
    - worker
    - "{{ server_stack }}"
  delegate_to: localhost

- name: Add tags to a virtual machine
  community.vmware.vmware_tag_manager:
    hostname: '{{ vmwaredata.vcenter_server }}'
    username: '{{ vmwaredata.vcenter_user }}'
    password: '{{ vmwaredata.vcenter_pass }}'
    validate_certs: no
    tag_names:
      - tag: "{{ server_stack }}"
        category: k3s
      - tag: "{{ item.role }}"
        category: k3s
    object_name: "{{ server_stack }}-{{ item.name }}"
    object_type: VirtualMachine
    state: add
  loop: "{{ vmlist }}"
  delegate_to: localhost

- name: Refresh inventory
  meta: refresh_inventory
